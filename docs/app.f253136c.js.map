{"version":3,"sources":["webpack:///./src/components/Table/Table.js","webpack:///./src/components/Table/TableHead.js","webpack:///./src/components/Table/TableBody.js","webpack:///./src/components/Table/TableRow.js","webpack:///./src/components/Table/TableCell.js","webpack:///./src/components/IconButton/IconButton.js","webpack:///./src/components/Icon.js","webpack:///./src/store/constants.js","webpack:///./src/components/Avatar/Avatar.js","webpack:///./src/helpers/index.js","webpack:///./src/store/reducer.js","webpack:///./src/store/store.js","webpack:///./src/store/actions.js","webpack:///./src/components/NoteDialog.js","webpack:///./src/components/ListNotes.js","webpack:///./src/components/SummaryNotes.js","webpack:///./src/helpers/schema.js","webpack:///./src/index.js"],"names":["Table","className","children","element","document","createElement","appendChild","TableHead","TableBody","TableRow","TableCell","type","align","value","classes","filter","i","join","textContent","IconButton","id","setAttribute","dataset","Icon","name","constants","NOTES_INIT","MODE_ARCHIVED","NOTE_CREATE","NOTE_UPDATE","NOTE_DELETE","NOTE_ARCHIVE","NOTE_UNARCHIVE","Avatar","getNoteById","notes","note","getCategoryAvatar","update","map","remove","reducer","state","action","payload","modeArchived","newNotes","push","archived","store","initialState","this","dispatch","forEach","cb","subscribe","callback","setModeActived","modal","querySelector","modalDialogInstance","Modal","form","fields","querySelectorAll","handleSubmit","event","preventDefault","data","Array","from","reduce","acc","dates","text","rslt","re","date","exec","dt","Date","parse","searchDatesFromText","content","createNote","uuidv4","created","hide","addEventListener","field","fillDataForm","relatedTarget","NoteDialog","app","TypeEvent","headCells","createTableHead","tableHead","row","categoryAvatarCell","cell","iconsCell","getIconButtonModeArchived","createTableBody","tableBody","category","createdText","format","datesText","avatar","Object","values","getIconButtonArchive","handleEvent","target","show","unarchiveNote","deleteNote","console","log","ListNotes","filteredNotes","table","removeEventListener","btnCreateNote","getSortedSummaryNotes","key","summary","item","entries","sort","a","b","countA","length","SummaryNotes","sortedSummary","tbody","array","countActive","object","shape","string","required","boolean","ensure","of","schema","cast","db"],"mappings":"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","file":"app.f253136c.js","sourcesContent":["const Table = ({ className, children }) => {\n  const element = document.createElement('table');\n  element.className = `table${className ? ` ${className}` : ''}`;\n  if (children) {\n    element.appendChild(children);\n  }\n\n  return element;\n};\n\nexport default Table;\n","const TableHead = ({ className, children } = {}) => {\n  const element = document.createElement('thead');\n  if (className) {\n    element.className = className;\n  }\n  if (children) {\n    element.appendChild(children);\n  }\n\n  return element;\n};\n\nexport default TableHead;\n","const TableBody = ({ children } = {}) => {\n  const element = document.createElement('tbody');\n  if (children) {\n    element.appendChild(children);\n  }\n\n  return element;\n};\n\nexport default TableBody;\n","const TableRow = ({ children } = {}) => {\n  const element = document.createElement('tr');\n  if (children) {\n    element.appendChild(children);\n  }\n\n  return element;\n};\n\nexport default TableRow;\n","const TableCell = ({ type = 'td', align = 'left', className, value } = {}) => {\n  const element = document.createElement(type);\n  const classes = [align === 'center' ? 'text-center' : '', className].filter((i) => i).join(' ');\n  if (classes) {\n    element.className = classes;\n  }\n\n  element.textContent = value;\n\n  return element;\n};\n\nexport default TableCell;\n","import './iconButton.scss';\n\nconst IconButton = ({ type, id, className, children }) => {\n  const element = document.createElement('button');\n  element.setAttribute('type', 'button');\n  if (type) {\n    element.dataset.type = type;\n  }\n  if (id || id === 0) {\n    element.dataset.id = id;\n  }\n  const classes = ['icon-button', type, className].filter((i) => i).join(' ');\n  element.className = classes;\n\n  if (children) {\n    element.appendChild(children);\n  }\n\n  return element;\n};\n\nexport default IconButton;\n","const Icon = (name) => {\n  const element = document.createElement('span');\n  element.className = 'material-icons';\n  element.textContent = name;\n\n  return element;\n};\n\nexport default Icon;\n","const constants = {\n  NOTES_INIT: 'notes/init',\n  MODE_ARCHIVED: 'mode/archived',\n  NOTE_CREATE: 'note/create',\n  NOTE_UPDATE: 'note/update',\n  NOTE_DELETE: 'note/delete',\n  NOTE_ARCHIVE: 'note/archive',\n  NOTE_UNARCHIVE: 'note/unarchive',\n};\n\nexport default constants;\n","import './avatar.scss';\n\nconst Avatar = ({ className, children }) => {\n  const element = document.createElement('div');\n  element.className = `avatar${className ? ` ${className}` : ''}`;\n  if (children) {\n    element.appendChild(children);\n  }\n\n  return element;\n};\n\nexport default Avatar;\n","import Avatar from '../components/Avatar';\nimport Icon from '../components/Icon';\n\nexport const getNoteById = (notes, id) => {\n  const [rslt] = notes.filter((note) => note.id === id);\n  return rslt;\n};\n\nexport const getCategoryAvatar = (value) => {\n  switch (value) {\n    case 'Task':\n      return Avatar({ children: Icon('shopping_cart'), className: 'mx-auto' });\n\n    case 'Random Thought':\n      return Avatar({ children: Icon('psychology'), className: 'mx-auto' });\n\n    case 'Idea':\n      return Avatar({ children: Icon('lightbulb'), className: 'mx-auto' });\n\n    case 'Quote':\n      return Avatar({ children: Icon('format_quote'), className: 'mx-auto' });\n\n    default:\n      return null;\n  }\n};\n\nexport const groupBy = (array, key) =>\n  array.reduce((acc, item) => {\n    const rslt = { ...acc };\n    (rslt[item[key]] = rslt[item[key]] ?? []).push(item);\n\n    return rslt;\n  }, {});\n\nexport const searchDatesFromText = (text) => {\n  if (text) {\n    return;\n  }\n\n  const rslt = [];\n  const re = /(?:\\d{1,2}\\/\\d{1,2}\\/\\d{4})|(?:\\d{1,2}\\-\\d{1,2}\\-\\d{4})|(?:\\d{1,2}\\.\\d{1,2}\\.\\d{4})/g;\n\n  let date = null;\n  while ((date = re.exec(text)) !== null) {\n    rslt.push(date[0]);\n  }\n\n  return rslt.map((dt) => (Date.parse(dt) ? new Date(dt) : null)).filter((i) => i);\n};\n","import constants from './constants';\nimport { getNoteById } from '../helpers';\n\nconst insert = (notes, value) => {\n  const newNotes = [...notes];\n  newNotes.push(value);\n  return newNotes;\n};\n\nconst update = (notes, value) =>\n  notes.map((note) => {\n    if (note.id !== value.id) {\n      return note;\n    }\n\n    return {\n      ...note,\n      ...value,\n    };\n  });\n\nconst remove = (notes, value) => notes.filter(({ id }) => id !== value);\n\nconst reducer = (state = {}, action) => {\n  switch (action.type) {\n    case constants.NOTES_INIT:\n      return { ...state, notes: action.payload };\n\n    case constants.MODE_ARCHIVED:\n      return { ...state, modeArchived: action.payload };\n\n    case constants.NOTE_CREATE:\n      return {\n        ...state,\n        notes: insert(state.notes, action.payload),\n      };\n\n    case constants.NOTE_UPDATE:\n      return {\n        ...state,\n        notes: update(state.notes, action.payload),\n      };\n\n    case constants.NOTE_DELETE:\n      return {\n        ...state,\n        notes: remove(state.notes, action.payload),\n      };\n\n    case constants.NOTE_ARCHIVE: {\n      const note = getNoteById(state.notes, action.payload);\n\n      return {\n        ...state,\n        notes: update(state.notes, { ...note, archived: true }),\n      };\n    }\n\n    case constants.NOTE_UNARCHIVE: {\n      const note = getNoteById(state.notes, action.payload);\n\n      return {\n        ...state,\n        notes: update(state.notes, { ...note, archived: false }),\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import reducer from './reducer';\n\nconst initialState = {\n  notes: [],\n  modeArchived: false,\n};\n\nclass Store {\n  #reducer = null;\n  #state = null;\n  #callbacks = [];\n\n  constructor(reducer, initialState = {}) {\n    this.#reducer = reducer;\n    this.#state = initialState;\n  }\n\n  get state() {\n    return this.#state;\n  }\n\n  dispatch(action) {\n    this.#state = this.#reducer(this.#state, action);\n    this.#callbacks.forEach((cb) => cb(this.#state));\n  }\n\n  subscribe(callback) {\n    this.#callbacks.push(callback);\n    return () => {\n      this.#callbacks = this.#callbacks.filter((cb) => cb !== callback);\n    };\n  }\n}\n\nconst store = new Store(reducer, initialState);\n\nexport default store;\n","import constants from './constants';\n\nexport const initNotes = (value) => ({\n  type: constants.NOTES_INIT,\n  payload: value,\n});\n\nexport const setModeActived = (value) => ({\n  type: constants.MODE_ARCHIVED,\n  payload: value,\n});\n\nexport const createNote = (value) => ({\n  type: constants.NOTE_CREATE,\n  payload: value,\n});\n\nexport const updateNote = (value) => ({\n  type: constants.NOTE_UPDATE,\n  payload: value,\n});\n\nexport const deleteNote = (value) => ({\n  type: constants.NOTE_DELETE,\n  payload: value,\n});\n\nexport const archiveNote = (value) => ({\n  type: constants.NOTE_ARCHIVE,\n  payload: value,\n});\n\nexport const unarchiveNote = (value) => ({\n  type: constants.NOTE_UNARCHIVE,\n  payload: value,\n});\n","import { Modal } from 'bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport store from '../store';\nimport { createNote, updateNote } from '../store/actions';\nimport { getNoteById, searchDatesFromText } from '../helpers';\n\nconst modal = document.querySelector('#createNoteModal');\nexport const modalDialogInstance = new Modal(modal);\nconst form = document.querySelector('#createNoteModal form');\n\nconst fields = form.querySelectorAll('input[type=text], select, textarea');\n\nconst getDataForm = () => Array.from(fields).reduce((acc, { name, value = '' }) => ({ ...acc, [name]: value }), {});\n\nconst fillDataForm = (id) => {\n  const note = getNoteById(store.state.notes, id);\n  if (note) {\n    fields.forEach((field) => {\n      // eslint-disable-next-line no-param-reassign\n      field.value = note[field.name] ?? '';\n    });\n  }\n};\n\nconst resetDataForm = () => {\n  fields.forEach((field) => {\n    // eslint-disable-next-line no-param-reassign\n    field.value = '';\n  });\n};\n\nconst handleSubmit = (event) => {\n  event.preventDefault();\n\n  const data = getDataForm();\n  const dates = searchDatesFromText(data.content);\n  if (data.id) {\n    store.dispatch(updateNote({ dates, ...data }));\n  } else {\n    store.dispatch(createNote({ ...data, id: uuidv4(), created: new Date(), dates }));\n  }\n\n  modalDialogInstance.hide();\n};\n\nconst handleShow = ({ relatedTarget }) => {\n  const id = relatedTarget.dataset.id;\n  fillDataForm(id);\n};\n\nconst handleHide = () => {\n  resetDataForm();\n};\n\nmodal.addEventListener('show.bs.modal', handleShow);\nmodal.addEventListener('hide.bs.modal', handleHide);\n\nconst NoteDialog = () => {\n  form.addEventListener('submit', handleSubmit);\n};\n\nexport default NoteDialog;\n","import { format } from 'date-fns';\n\nimport { Table, TableHead, TableBody, TableRow, TableCell } from './Table';\nimport IconButton from './IconButton';\nimport Icon from './Icon';\n\nimport store from '../store';\nimport { archiveNote, unarchiveNote, deleteNote, setModeActived } from '../store/actions';\n\nimport { getCategoryAvatar } from '../helpers/';\n\nimport { modalDialogInstance } from './NoteDialog';\n\nconst app = document.querySelector('#app');\n\nconst TypeEvent = {\n  edit: 'edit',\n  archive: 'archive',\n  unarchive: 'unarchive',\n  delete: 'delete',\n  'toggle-archive': 'toggle-archive',\n  'toggle-active': 'toggle-active',\n  'toggle-delete': 'toggle-delete',\n};\n\nconst headCells = [\n  { text: 'Name', align: 'left' },\n  { text: 'Created', align: 'left' },\n  { text: 'Category' },\n  { text: 'Content' },\n  { text: 'Dates' },\n];\n\nconst getIconButtonModeArchived = (modeArchived) => {\n  const type = modeArchived ? TypeEvent['toggle-active'] : TypeEvent['toggle-archive'];\n  const icon = modeArchived ? 'unarchive' : 'archive';\n\n  return IconButton({ type, children: Icon(icon) });\n};\n\nconst getIconButtonArchive = (modeArchived, id) => {\n  const type = modeArchived ? TypeEvent.unarchive : TypeEvent.archive;\n  const icon = modeArchived ? 'unarchive' : 'archive';\n\n  return IconButton({ type, id, children: Icon(icon) });\n};\n\nconst createTableHead = (modeArchived) => {\n  const tableHead = TableHead();\n  const row = TableRow();\n\n  const categoryAvatarCell = TableCell();\n  row.appendChild(categoryAvatarCell);\n\n  headCells.forEach(({ text, align }) => {\n    const cell = TableCell({ type: 'th', align, value: text });\n    row.appendChild(cell);\n  });\n\n  // Actions head\n  const iconsCell = TableCell({ align: 'center' });\n  iconsCell.appendChild(getIconButtonModeArchived(modeArchived));\n  iconsCell.appendChild(IconButton({ type: TypeEvent['toggle-delete'], children: Icon('delete') }));\n  row.appendChild(iconsCell);\n\n  tableHead.appendChild(row);\n\n  return tableHead;\n};\n\nconst createTableBody = (modeArchived, value) => {\n  const tableBody = TableBody();\n  value.forEach(({ id, name, created, category, content, dates, archived }) => {\n    const row = TableRow();\n    const createdText = format(created, 'MMMM dd, yyyy');\n    const datesText = dates?.map((date) => format(date, 'M/d/yyyy')).join(', ');\n\n    // Category avatar\n    const avatar = getCategoryAvatar(category);\n    const categoryAvatarCell = TableCell();\n    categoryAvatarCell.appendChild(avatar);\n    row.appendChild(categoryAvatarCell);\n\n    Object.values({\n      name,\n      created: createdText,\n      category,\n      content,\n      dates: datesText,\n    }).forEach((text) => {\n      const cell = TableCell({ value: text });\n      row.appendChild(cell);\n    });\n\n    // Actions row\n    const iconsCell = TableCell();\n    iconsCell.appendChild(IconButton({ type: TypeEvent.edit, id, children: Icon('edit') }));\n    iconsCell.appendChild(getIconButtonArchive(archived, id));\n    iconsCell.appendChild(IconButton({ type: TypeEvent.delete, id, children: Icon('delete') }));\n    row.appendChild(iconsCell);\n\n    tableBody.appendChild(row);\n  });\n\n  return tableBody;\n};\n\nconst handleEvent = ({ target }) => {\n  const { type, id } = target.dataset;\n\n  switch (type) {\n    case TypeEvent.edit:\n      modalDialogInstance.show(target);\n      break;\n\n    case TypeEvent.archive:\n      store.dispatch(archiveNote(id));\n      break;\n\n    case TypeEvent.unarchive:\n      store.dispatch(unarchiveNote(id));\n      break;\n\n    case TypeEvent.delete:\n      store.dispatch(deleteNote(id));\n      break;\n\n    case TypeEvent['toggle-archive']:\n      store.dispatch(setModeActived(true));\n      break;\n\n    case TypeEvent['toggle-active']:\n      store.dispatch(setModeActived(false));\n      break;\n\n    case TypeEvent['toggle-delete']:\n      console.log('Opps!');\n      break;\n\n    default:\n      break;\n  }\n};\n\nconst ListNotes = (store) => {\n  const { notes = [], modeArchived = false } = store;\n  const filteredNotes = notes.filter(({ archived = false }) => archived === modeArchived);\n\n  let table = document.querySelector('#listNotes');\n  if (table) {\n    table.removeEventListener('click', handleEvent);\n    table.remove();\n  }\n\n  // Create\n  const tableHead = createTableHead(modeArchived);\n  table = Table({\n    className: 'table-striped table-hover',\n    children: tableHead,\n  });\n  table.setAttribute('id', 'listNotes');\n\n  const tableBody = createTableBody(modeArchived, filteredNotes);\n  table.appendChild(tableBody);\n\n  app.appendChild(table);\n  app.appendChild(btnCreateNote);\n\n  // EventListener\n  table.addEventListener('click', handleEvent);\n};\n\nexport default ListNotes;\n","import { Table, TableHead, TableBody, TableRow, TableCell } from './Table';\n\nimport { getCategoryAvatar, groupBy } from '../helpers/';\n\nconst app = document.querySelector('#app');\n\nconst headCells = [{ text: 'Note Category' }, { text: 'Active' }, { text: 'Archived' }];\n\nconst createTableHead = () => {\n  const tableHead = TableHead();\n  const row = TableRow();\n\n  const categoryAvatarCell = TableCell();\n  row.appendChild(categoryAvatarCell);\n\n  headCells.forEach(({ text, align }) => {\n    const cell = TableCell({ type: 'th', align, value: text });\n    row.appendChild(cell);\n  });\n\n  tableHead.appendChild(row);\n\n  return tableHead;\n};\n\nconst createTableBody = (value) => {\n  const tableBody = TableBody();\n  value.forEach(([category, array]) => {\n    const row = TableRow();\n\n    // Category avatar\n    const avatar = getCategoryAvatar(category);\n    const categoryAvatarCell = TableCell();\n    categoryAvatarCell.appendChild(avatar);\n    row.appendChild(categoryAvatarCell);\n\n    row.appendChild(TableCell({ value: category }));\n\n    const countActive = array.filter(({ archived }) => !archived).length;\n    row.appendChild(TableCell({ value: countActive }));\n    row.appendChild(TableCell({ value: array.length - countActive }));\n\n    tableBody.appendChild(row);\n  });\n\n  return tableBody;\n};\n\nconst getSortedSummaryNotes = (notes, field) => {\n  const summary = groupBy(notes, field);\n  return Object.entries(summary).sort((a, b) => {\n    const countA = a[1].length;\n    const countB = b[1].length;\n    return countB - countA;\n  });\n};\n\nconst SummaryNotes = (store) => {\n  const { notes = [] } = store;\n  const sortedSummary = getSortedSummaryNotes(notes, 'category');\n\n  let table = document.querySelector('#summaryNotes');\n  if (!table) {\n    // Create\n    const tableHead = createTableHead();\n    table = Table({\n      className: 'table-striped table-hover mt-3',\n      children: tableHead,\n    });\n    table.setAttribute('id', 'summaryNotes');\n  }\n\n  // Always clear tbody (only tbody for performance)\n  const tbody = document.querySelector('#summaryNotes > tbody');\n  tbody?.remove();\n\n  const tableBody = createTableBody(sortedSummary);\n  table.appendChild(tableBody);\n\n  app.appendChild(table);\n};\n\nexport default SummaryNotes;\n","import { object, array, string, boolean, date } from 'yup';\n\nconst note = object().shape({\n  id: string().required(),\n  archived: boolean(),\n  name: string().required(),\n  created: date().required(),\n  category: string().required(),\n  content: string(),\n  dates: array().ensure().of(date()),\n});\n\nconst notes = array().ensure().of(note);\n\nexport default notes;\n","import 'bootstrap';\nimport './styles/global.scss';\n\nimport ListNotes from './components/ListNotes';\nimport SummaryNotes from './components/SummaryNotes';\nimport NoteDialog from './components/NoteDialog';\n\nimport store from './store';\nimport { initNotes } from './store/actions';\n\nimport schema from './helpers/schema';\nimport db from './db.json';\n\nstore.subscribe(ListNotes);\nstore.subscribe(SummaryNotes);\n\n// Type cast\nconst notes = schema.cast(db);\nstore.dispatch(initNotes(notes));\n\nNoteDialog();\n"],"sourceRoot":""}